var AAA_PWA_PREFIX = "sainternet_";
var BBB_PWA_VERSION = "version_04";
var CCC_PWA_CACHE_NAME = AAA_PWA_PREFIX + BBB_PWA_VERSION;
var DDD_PWA_ASSETS = [
  "/",
  "/265.html",
  "/404.html",
  "/connecttosainternet.html",
  "/downloads/",
  "/downloads/apple/",
  "/downloads/apple/sainternet-https-and-tls.mobileconfig",
  "/downloads/apple/sainternet-https-only.mobileconfig",
  "/downloads/apple/sainternet-tls-only.mobileconfig",
  "/favicon.ico",
  "/filtereddns.html",
  "/frequentlyaskedquestions.html",
  "/index.html",
  "/newsandupdates.html",
  "/pokedexoverdns.html",
  "/portsandprotocols.html",
  "/projects.html",
  "/pwapp.min.js",
  "/pwapp-serviceworker.min.js",
  "/reportaproblem.html",
  "/resources/",
  "/resources/fontawesome",
  "/resources/fontawesome/css",
  "/resources/fontawesome/css/brands.min.css",
  "/resources/fontawesome/css/fontawesome.min.css",
  "/resources/fontawesome/css/solid.min.css",
  "/resources/fontawesome/webfonts",
  "/resources/fontawesome/webfonts/fa-brands-400.ttf",
  "/resources/fontawesome/webfonts/fa-brands-400.woff2",
  "/resources/fontawesome/webfonts/fa-solid-900.ttf",
  "/resources/fontawesome/webfonts/fa-solid-900.woff2",
  "/resources/icons/",
  "/resources/icons/android-chrome-192x192.png",
  "/resources/icons/android-chrome-256x256.png",
  "/resources/icons/android-chrome-265-192x192.png",
  "/resources/icons/android-chrome-265-256x256.png",
  "/resources/icons/android-chrome-404-192x192.png",
  "/resources/icons/android-chrome-404-256x256.png",
  "/resources/icons/favicon-16x16.png",
  "/resources/icons/favicon-265-16x16.png",
  "/resources/icons/favicon-265-32x32.png",
  "/resources/icons/favicon-265-48x48.png",
  "/resources/icons/favicon-265.ico",
  "/resources/icons/favicon-32x32.png",
  "/resources/icons/favicon-404-16x16.png",
  "/resources/icons/favicon-404-32x32.png",
  "/resources/icons/favicon-404-48x48.png",
  "/resources/icons/favicon-404.ico",
  "/resources/icons/favicon-48x48.png",
  "/resources/icons/filtereddns-192x192.png",
  "/resources/icons/mstile-144x144.png",
  "/resources/icons/newsandupdates-192x192.png",
  "/resources/icons/pokedexoverdns-192x192.png",
  "/resources/icons/projects-192x192.png",
  "/resources/icons/pwa-maskable-128x128.png",
  "/resources/icons/pwa-maskable-192x192.png",
  "/resources/icons/pwa-maskable-384x384.png",
  "/resources/icons/pwa-maskable-48x48.png",
  "/resources/icons/pwa-maskable-512x512.png",
  "/resources/icons/pwa-maskable-72x72.png",
  "/resources/icons/pwa-maskable-96x96.png",
  "/resources/images/",
  "/resources/images/luxio.jpg",
  "/resources/images/luxio.png",
  "/resources/images/luxio-shiny.jpg",
  "/resources/images/luxio-shiny.png",
  "/resources/images/luxio-shiny.webp",
  "/resources/images/luxio.webp",
  "/resources/images/terminal.jpg",
  "/resources/images/terminal.png",
  "/resources/images/terminal.webp",
  "/resources/images/wurmple.jpg",
  "/resources/images/wurmple.png",
  "/resources/images/wurmple-shiny.jpg",
  "/resources/images/wurmple-shiny.png",
  "/resources/images/wurmple-shiny.webp",
  "/resources/images/wurmple.webp",
  "/resources/javascript/",
  "/resources/javascript/headers.min.js",
  "/resources/javascript/load-fonts.min.js",
  "/resources/javascript/material.min.js",
  "/resources/javascript/random_phrase.min.js",
  "/resources/javascript/sainternet.min.js",
  "/resources/screenshots/",
  "/resources/screenshots/sainternet.webp",
  "/resources/stylesheets/",
  "/resources/stylesheets/button_home.min.css",
  "/resources/stylesheets/datetime.min.css",
  "/resources/stylesheets/img.min.css",
  "/resources/stylesheets/material.amber-red.min.css",
  "/resources/stylesheets/material.blue_grey-red.min.css",
  "/resources/stylesheets/material.blue-red.min.css",
  "/resources/stylesheets/material.brown-red.min.css",
  "/resources/stylesheets/material.cyan-red.min.css",
  "/resources/stylesheets/material.deep_orange-red.min.css",
  "/resources/stylesheets/material.deep_purple-red.min.css",
  "/resources/stylesheets/material.green-red.min.css",
  "/resources/stylesheets/material.grey-red.min.css",
  "/resources/stylesheets/material.indigo-red.min.css",
  "/resources/stylesheets/material.light_blue-red.min.css",
  "/resources/stylesheets/material.light_green-red.min.css",
  "/resources/stylesheets/material.lime-red.min.css",
  "/resources/stylesheets/material.orange-red.min.css",
  "/resources/stylesheets/material.pink-red.min.css",
  "/resources/stylesheets/material.purple-red.min.css",
  "/resources/stylesheets/material.red-blue.min.css",
  "/resources/stylesheets/material.teal-red.min.css",
  "/resources/stylesheets/material.yellow-red.min.css",
  "/resources/stylesheets/pre.min.css",
  "/resources/stylesheets/ribbons.min.css",
  "/resources/stylesheets/sainternet.min.css",
  "/resources/stylesheets/table.min.css",
  "/sainternet.webmanifest",
  "/technologies.html",
  "/testsainternet.html"
];

self.addEventListener("fetch", function (e) {
  console.log("[Service Worker] Fetching Resource: " + e.request.url);
  e.respondWith(
    caches.match(e.request).then(function (request) {
      if (request) {
        console.log("[Service Worker] Cache Hit: " + e.request.url);
        return request;
      } else {
        console.log("[Service Worker] Cache Miss: " + e.request.url);
        return fetch(e.request);
      }
    })
  );
});

self.addEventListener("install", function (e) {
  self.skipWaiting();
  e.waitUntil(
    caches.open(CCC_PWA_CACHE_NAME).then(function (cache) {
      console.log("[Service Worker] Opening Cache: " + CCC_PWA_CACHE_NAME);
      return cache.addAll(DDD_PWA_ASSETS);
    })
    .catch(function(e) {
      console.log("[Service Worker] Error Opening Cache", e);
    })
  );
});

self.addEventListener("activate", function (e) {
  if (self.clients && clients.claim) {
    console.log("[Service Worker] Claiming Client(s)");
    clients.claim();
  }
  console.log("[Service Worker] Checking Cache(s)");
  e.waitUntil(
    caches.keys().then(function (keyList) {
      var cacheWhitelist = keyList.filter(function (key) {
        return key.indexOf(AAA_PWA_PREFIX);
      });
      console.log("[Service Worker] Whitelisting Cache: " + CCC_PWA_CACHE_NAME);
      cacheWhitelist.push(CCC_PWA_CACHE_NAME);
      return Promise.all(keyList.map(function (key, i) {
        if (cacheWhitelist.indexOf(key) === -1) {
          console.log("[Service Worker] Removing Orphaned Cache(s): " + keyList[i] );
          return caches.delete(keyList[i]);
        }
      }));
    })
  );
});
