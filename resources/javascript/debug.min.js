const pwaName="sainternet",pwaVersion="_v12";function deleteLocalStorageAndSessionStorage(){let e=0;for(let t=0;t<localStorage.length;t++){let g=localStorage.key(t),l=localStorage.getItem(g);localStorage.removeItem(g),console.log(`[Debug] Deleted localStorage key: ${g}, value: ${l}`),e++}let o=0;for(let a=0;a<sessionStorage.length;a++){let s=sessionStorage.key(a),n=sessionStorage.getItem(s);sessionStorage.removeItem(s),console.log(`[Debug] Deleted sessionStorage key: ${s}, value: ${n}`),o++}0===e&&0===o&&console.log("[Debug] No key/value pairs found to delete in localStorage or sessionStorage")}function deleteServiceWorkerCaches(){let e="sainternet_v12";caches.keys().then(t=>{let g=t.filter(t=>t.startsWith(pwaName)&&t!==e);return g.length>0?logDebugMessage(`[Debug] Found ${g.length} matching caches`):logDebugMessage("[Debug] No matching caches found"),Promise.all(g.map(e=>caches.delete(e).then(()=>{logDebugMessage(`[Debug] Deleted cache: ${e}`)})))}).then(()=>caches.open(e)).then(e=>e.clear()).then(()=>{logDebugMessage(`[Debug] Cleared contents of current cache: ${e}`)}).catch(e=>{logDebugMessage(`[Debug] Error deleting/clearing caches: ${e}`,"error")})}function toggleDebugFlag(){let e=localStorage.getItem("DEBUG"),t=!1;"true"===e?(logDebugMessage("[Debug] Toggle DEBUG: false"),t=!1,localStorage.setItem("DEBUG","false")):(t=!0,localStorage.setItem("DEBUG","true"),logDebugMessage("[Debug] Toggle DEBUG: true"));let g=new BroadcastChannel("sainternet-debug");g.postMessage({debugValue:t}),g.close()}function logDebugMessage(e,t="log"){let g=localStorage.getItem("DEBUG");"true"===g&&console[t](e)}
