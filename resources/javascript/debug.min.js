function deleteLocalStorageAndSessionStorage(){let e=0;for(let t=0;t<localStorage.length;t++){let g=localStorage.key(t),l=localStorage.getItem(g);localStorage.removeItem(g),console.log(`[Debug] Deleted localStorage key: ${g}, value: ${l}`),e++}let o=0;for(let s=0;s<sessionStorage.length;s++){let a=sessionStorage.key(s),r=sessionStorage.getItem(a);sessionStorage.removeItem(a),console.log(`[Debug] Deleted sessionStorage key: ${a}, value: ${r}`),o++}0===e&&0===o&&console.log("[Debug] No key/value pairs found to delete in localStorage or sessionStorage")}function deleteServiceWorkerCaches(){caches.keys().then(e=>{let t=e.filter(e=>e.startsWith("sainternet"));return Promise.all(t.map(e=>caches.delete(e).then(()=>{logDebugMessage(`[Debug] Deleted cache: ${e}`)})))}).then(e=>{let t=e.filter(e=>!0===e);0===t.length?logDebugMessage("[Debug] No matching caches found"):logDebugMessage(`[Debug] Deleted ${t.length} matching caches`)}).catch(e=>{logDebugMessage(`[Debug] Error deleting caches: ${e}`,"error")})}function toggleDebugFlag(){let e=localStorage.getItem("DEBUG"),t=!1;"true"===e?(logDebugMessage("[Debug] Toggle DEBUG: false"),t=!1,localStorage.setItem("DEBUG","false")):(t=!0,localStorage.setItem("DEBUG","true"),logDebugMessage("[Debug] Toggle DEBUG: true"));let g=new BroadcastChannel("sainternet-debug");g.postMessage({debugValue:t}),g.close()}function logDebugMessage(e,t="log"){let g=localStorage.getItem("DEBUG");"true"===g&&console[t](e)}
