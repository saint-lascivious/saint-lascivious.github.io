/**
 * sainternet.xyz - resources/javascript/console_wrapper.min.js
 * Copyright 2023 saint-lascivious (Hayden Pearce). All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License
 */

/**
 * Logs a message to the console, with optional date and time information, if
 * the CONSOLE_LOGGING flag is set to true.
 *
 * Checks if console exists as an object, and console.logType (default 'log')
 * exists as a function.
 *
 * Safe to use in environments where console or logType are undefined.
 *
 * @function
 * @name consoleWrapper
 * @param {string} message - The message to be logged.
 * @param {string} [logType='log'] - The type of console method to use (log,
 * error, warn, etc.).
 * @param {boolean} [includeDateTime=false] - Whether to include the current
 * date and time in the log message.
 */
function consoleWrapper(message, logType = 'log', includeDateTime = false) {
  if (includeDateTime) {
    message = `${new Date().toLocaleString()} ${message}`;
  }
  if (typeof console === 'object' && typeof console[logType] === 'function') {
    const consoleLogging = localStorage.getItem('CONSOLE_LOGGING');
    if (consoleLogging === 'true') {
      console[logType](message);
    }
  }
}

/**
 * Logs a message to the console.
 *
 * Checks if console exists as an object, and console.logType (default 'log')
 * exists as a function.
 *
 * Safe to use in environments where console or logType are undefined.
 *
 * @function
 * @name consoleWrapperSimple
 * @param {string} message - The message to be logged.
 * @param {string} [logType='log'] - The type of console method to use (log,
 * error, warn, etc.).
 */
function consoleWrapperSimple(message, logType = 'log') {
  if (typeof console === 'object' && typeof console[logType] === 'function') {
    console[logType](message);
  }
}

/**
 * Announce ourselves.
 */
consoleWrapper(`[Console Wrapper] Loaded`);
